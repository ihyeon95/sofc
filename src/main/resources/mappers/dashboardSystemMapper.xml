<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stx.sofc.mappers.dashboard.system">
	
	<select id="systemMeasure" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : systemMeasure
		* Description : 발전기 최근 측정값
		* Author : kct
		**/
		WITH AA AS (
					<!-- 전일 누적 발전량 -->
					SELECT Top 1 RTU_ID, fCumulativeWatt
					FROM STX_SOFC_MEASURE
					WHERE CONVERT(CHAR(8), Timestamp, 112) <![CDATA[  < ]]>  CONVERT(VARCHAR, GETDATE(), 112)
					AND RTU_ID = #{iRtuNum}
					ORDER BY Timestamp DESC
		),
		BB AS ( 
					<!-- 당일 발전량  -->
					SELECT RTU_ID, MAX(fCumulativeWatt) - Min(fCumulativeWatt) AS fCumulativeWatt
					FROM STX_SOFC_MEASURE 
					WHERE CONVERT(INT, Convert(CHAR(8), Timestamp, 112)) = CONVERT(VARCHAR, GETDATE(), 112) 
					AND RTU_ID = #{iRtuNum}
					GROUP BY RTU_ID
		),
		CC AS (		
		 			<!-- 당일 사용 열량 -->
					SELECT TOP 1 RTU_ID, Accumulate_Heat_Consume
					FROM STX_SOFC_MEASURE
					WHERE CONVERT(INT, Convert(CHAR(8), Timestamp, 112)) = CONVERT(VARCHAR, GETDATE(), 112)
					AND RTU_ID = #{iRtuNum}
					ORDER BY Timestamp DESC
		),
		DD AS (
		 			<!-- 전기 에너지 누적 발전량 -->
					SELECT TOP 1 RTU_ID, fCumulativeWatt 
					FROM STX_SOFC_MEASURE 
					WHERE CONVERT(INT, CONVERT(CHAR(8), Timestamp, 112)) = CONVERT(VARCHAR, GETDATE(), 112)
					AND RTU_ID = #{iRtuNum}
					ORDER BY Timestamp DESC
		),
		EE AS (
		 			<!-- 열에너지 금일 생산량 --> 
		 			SELECT RTU_ID, MAX(Accumulate_Heat_Produce) - MIN(Accumulate_Heat_Produce) AS Accumulate_Heat_Produce
					FROM STX_SOFC_MEASURE 
					WHERE CONVERT(INT, CONVERT(CHAR(8), Timestamp, 112)) = CONVERT(VARCHAR, GETDATE(), 112)
					AND RTU_ID = #{iRtuNum}
					GROUP BY RTU_ID
		),
		FF AS (
		 			<!-- 열에너지 누적생산량 --> 
		 			SELECT TOP 1 RTU_ID, Accumulate_Heat_Produce
					FROM STX_SOFC_MEASURE
					WHERE CONVERT(INT, CONVERT(CHAR(8), Timestamp, 112)) = CONVERT(VARCHAR, GETDATE(), 112)
					AND RTU_ID = #{iRtuNum}
					ORDER BY Timestamp DESC
		),
		GG AS (
		 			<!-- 전국 발전량 그래프 --> 
					SELECT TOP 1 RTU_ID, txtCumulativeWattHour, TIMESTAMP, Status_Board_State
					FROM STX_SOFC_MEASURE 
					WHERE CONVERT(INT, CONVERT(CHAR(8), Timestamp, 112)) = CONVERT(VARCHAR, GETDATE(), 112) 
					AND RTU_ID = #{iRtuNum}
					ORDER BY Timestamp DESC
		)
		SELECT A.iRtuNum, 
				A.sSystemName,
				ISNULL(ROUND(BB.fCumulativeWatt, 2), 0) AS tdCumulativeWatt,
				ISNULL(ROUND(A.fTodayEfficiency, 2), 0) AS tdEfficiency,
				ISNULL(ROUND(CC.Accumulate_Heat_Consume, 2), 0) AS tdAccumulateHeatConsume,
				ISNULL(ROUND(AA.fCumulativeWatt, 2), 0) AS pdCumulativeWatt,
				ISNULL(ROUND(A.fCumulativeEfficiency, 2), 0) AS cumulativeEfficiency,
				
				ISNULL(ROUND((BB.fCumulativeWatt * A.fCO2) / 1000, 5), 0) AS tdReductionCo2Watt,
				ISNULL(A.fCapa, 0) AS fCapa,
				ISNULL(ROUND(DD.fCumulativeWatt, 2), 0) AS cumulativeWatt,
				
				ISNULL(ROUND(EE.Accumulate_Heat_Produce, 2), 0) AS tdAccumulateHeatProduce,
				ISNULL(ROUND((EE.Accumulate_Heat_Produce * A.fCO2) / 1000, 5), 0) AS tdReductionCo2Heat,
				ISNULL(A.fCapa_Solar, 0) AS fCapa_Solar,
				ISNULL(ROUND(FF.Accumulate_Heat_Produce, 2), 0) AS accumulateHeatProduce,
				
				ISNULL(GG.txtCumulativeWattHour, '') AS txtCumulativeWattHour,
				ISNULL(GG.timestamp, '') AS timestamp,
				ISNULL(GG.Status_Board_State, 0) AS tdStatusBoardState
		FROM System_Info A
		LEFT OUTER JOIN AA ON A.iRtuNum = AA.RTU_ID
		LEFT OUTER JOIN BB ON A.iRtuNum = BB.RTU_ID
		LEFT OUTER JOIN CC ON A.iRtuNum = CC.RTU_ID
		LEFT OUTER JOIN DD ON A.iRtuNum = DD.RTU_ID
		LEFT OUTER JOIN EE ON A.iRtuNum = EE.RTU_ID
		LEFT OUTER JOIN FF ON A.iRtuNum = FF.RTU_ID
		LEFT OUTER JOIN GG ON A.iRtuNum = GG.RTU_ID
		WHERE A.iRtuNum = #{iRtuNum}
	</select>
	
	<select id="measureStatusList" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : measureStatusList
		* Description : 시간별 공장 발전량 리스트
		* Author : kct
		**/
		<![CDATA[
			SELECT A.Status_Board_State AS tdStatusBoardState
			FROM STX_SOFC_MEASURE A
			JOIN (
					SELECT RTU_ID, MAX(TIMESTAMP) AS TIME
			       	FROM STX_SOFC_MEASURE
			      	WHERE RTU_ID IN (
										SELECT iRtuNum
										FROM SYSTEM_INFO
										WHERE 1=1
										]]>
										<if test=" iCityNum != null and iCityNum != '' ">
											<![CDATA[
												AND iCityNum = #{iCityNum}
											]]>
										</if>
										<if test=" iAreaNum != null and iAreaNum != '' ">
											<![CDATA[
												AND iAreaNum = #{iAreaNum}
											]]>
										</if>
										<if test=" iSiteNum != null and iSiteNum != '' ">
											<![CDATA[
												AND iSiteNum = #{iSiteNum}
											]]>
										</if>
										<![CDATA[
									)
					AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE()) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE()))
					GROUP BY RTU_ID
				) B
			ON A.RTU_ID = B.RTU_ID
			AND A.TIMESTAMP = B.TIME
		]]>
	</select>
	
	<select id="systemList" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : systemList
		* Description : 발전기 리스트 조회
		* Author : kct
		**/
		<![CDATA[
			SELECT *
			FROM (
				SELECT ROW_NUMBER() OVER(ORDER BY AA.sSys_cnt) ROWNUM, *
				FROM (
					SELECT A.iSysNum,
							A.sSystemName, 
							A.iRtuNum,
							A.iBdNum,
							1 AS sSys_cnt, 
							ISNULL(A.fCapa, 0) AS fCapa, 
							ISNULL(A.fTodayEfficiency, 0) AS tdEfficiency
					FROM SYSTEM_INFO A
					WHERE 1=1
					AND iCityNum = #{iCityNum}
					AND iAreaNum = #{iAreaNum}
					AND iSiteNum = #{iSiteNum}
				) AA
			) BB
			WHERE BB.ROWNUM BETWEEN #{start} AND #{end}
			ORDER BY BB.iSysNum
		]]>
	</select>
	
	<select id="systemListCnt" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="int">
		/**
		* Query ID : systemListCnt
		* Description : 발전기 리스트 갯수 조회
		* Author : kct
		**/
		<![CDATA[
			SELECT COUNT(*)
			FROM SYSTEM_INFO A 
			WHERE 1=1
			AND iCityNum = #{iCityNum}
			AND iAreaNum = #{iAreaNum}
			AND iSiteNum = #{iSiteNum}
		]]>		
	</select>

	<select id="systemMeasureList" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : systemMeasureList
		* Description : 발전기 최근 측정값
		* Author : kct
		**/
		<![CDATA[
			
			WITH PREDAY_STX_SOFC_MEASURE AS (
				SELECT RTU_ID,
						Accumulate_Watt_Produce,
						Accumulate_Heat_Produce
				FROM STX_SOFC_MEASURE
				WHERE ID IN (
								SELECT ID
								FROM STX_SOFC_MEASURE A
								JOIN (
										SELECT RTU_ID, MAX(TIMESTAMP) AS TIME
										FROM STX_SOFC_MEASURE
										WHERE RTU_ID IN (
															SELECT iRtuNum
															FROM SYSTEM_INFO
															WHERE 1=1
															AND iCityNum = #{iCityNum}
															AND iAreaNum = #{iAreaNum}
															AND iSiteNum = #{iSiteNum}
														)
										AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE() - 1) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE() - 1))
										GROUP BY RTU_ID
								) B
								ON A.RTU_ID = B.RTU_ID
								AND A.TIMESTAMP = B.TIME
				)
			),
			TODAY_STX_SOFC_MEASURE AS (
				SELECT RTU_ID, 
						Accumulate_Watt_Produce,
						Accumulate_Heat_Produce,
						Accumulate_Heat_Consume,
						Pre_Day_Accumulate_Heat_Produce,
						Watt_Meter,
						FL1,
						FL2
				FROM STX_SOFC_MEASURE
				WHERE ID IN (
								SELECT ID
								FROM STX_SOFC_MEASURE A
								JOIN (
										SELECT RTU_ID, MAX(TIMESTAMP) AS TIME
								       	FROM STX_SOFC_MEASURE
								      	WHERE RTU_ID IN (
															SELECT iRtuNum
															FROM SYSTEM_INFO
															WHERE 1=1
															AND iCityNum = #{iCityNum}
															AND iAreaNum = #{iAreaNum}
															AND iSiteNum = #{iSiteNum}
														)
										AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE()) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE()))
										GROUP BY RTU_ID
								) B
								ON A.RTU_ID = B.RTU_ID
								AND A.TIMESTAMP = B.TIME	
				)
			)
			SELECT A.sSystemName, 
					CONVERT(NVARCHAR(53), ISNULL(A.fCapa, 0)) AS fCapa,
					CONVERT(NVARCHAR(53), ISNULL(A.fCapa_Geo, 0)) AS fCapa_Geo,
					CONVERT(NVARCHAR(53), ISNULL(A.fCapa_Solar, 0)) AS fCapa_Solar,
					CONVERT(NVARCHAR(53), ISNULL(B.Accumulate_Watt_Produce, 0)) AS pdAccumulateWattProduce,
					CONVERT(nvarchar(53), ISNULL(B.Accumulate_Heat_Produce, 0)) AS pdAccumulateHeatProduce,
					CONVERT(nvarchar(53), ISNULL(C.Accumulate_Watt_Produce, 0)) AS tdAccumulateWattProduce,
					CONVERT(nvarchar(53), ISNULL(C.Accumulate_Heat_Produce, 0)) AS tdAccumulateHeatProduce,
					CONVERT(nvarchar(53), ISNULL(C.Accumulate_Heat_Consume, 0)) AS tdAccumulateHeatConsume,
					CONVERT(nvarchar(53), ISNULL(C.Pre_Day_Accumulate_Heat_Produce, 0)) AS tdPreDayAccumulateHeatProduce,
					CONVERT(nvarchar(53), ISNULL(C.Watt_Meter, 0)) AS tdWattMeter,
					CONVERT(nvarchar(53), ISNULL(C.FL1, 0)) AS tdFL1,
					CONVERT(nvarchar(53), ISNULL(C.FL2, 0)) AS tdFL2
			FROM SYSTEM_INFO A 
			LEFT OUTER JOIN PREDAY_STX_SOFC_MEASURE B ON A.iRtuNum = B.RTU_ID
			LEFT OUTER JOIN TODAY_STX_SOFC_MEASURE C ON A.iRtuNum = C.RTU_ID
			WHERE 1=1
			AND iCityNum = #{iCityNum}
			AND iAreaNum = #{iAreaNum}
			AND iSiteNum = #{iSiteNum}
		]]>
	</select>
	
	<!-- <select id="systemEffi" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="int">
		/**
		* Query ID : systemEffi
		* Description : 누적효율 계산값
		* Author : kct
		**/
		<![CDATA[
			SELECT ISNULL(AVG(BB.EFFICIENT), 0) AS EFFICIENT
			FROM (
				SELECT AA.RTU_ID, 
			  			AA.DATE,
			  			CASE 
							WHEN (AA.Watt_Meter - 60) / ${lhv} * (AA.FL1 + AA.FL2) * 1000 < 0 THEN 0
							ELSE (AA.Watt_Meter - 60) / ${lhv} * (AA.FL1 + AA.FL2) * 1000
						END AS EFFICIENT
				FROM (
					SELECT A.RTU_ID, 
							DATE,
							CONVERT(NUMERIC(38,0), A.Watt_Meter) AS Watt_Meter,
							CONVERT(NUMERIC(38,0), A.FL1) AS FL1,
							CONVERT(NUMERIC(38,0), A.FL2) AS FL2
					FROM STX_SOFC_MEASURE A
					JOIN (
								SELECT TOP 100 PERCENT RTU_ID, MAX(TIMESTAMP) AS DATE
								FROM STX_SOFC_MEASURE
								WHERE 1=1
								AND RTU_ID IN (
													SELECT iRtuNum
													FROM SYSTEM_INFO
													WHERE 1=1
													]]>
													<if test=" iCityNum != null and iCityNum != '' ">
														<![CDATA[
															AND iCityNum = #{iCityNum}
														]]>
													</if>
													<if test=" iAreaNum != null and iAreaNum != '' ">
														<![CDATA[
															AND iAreaNum = #{iAreaNum}
														]]>
													</if>
													<if test=" iSiteNum != null and iSiteNum != '' ">
														<![CDATA[
															AND iSiteNum = #{iSiteNum}
														]]>
													</if>
													<![CDATA[
											)
								GROUP BY RTU_ID, DATEPART(DD,TIMESTAMP)
							) B
					ON A.RTU_ID = B.RTU_ID
					AND A.TIMESTAMP = B.DATE
				) AA
			)BB
		]]>
	</select> -->
	
	<select id="systemMeasureHourList" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : systemMeasureHourList
		* Description : 시간별 발전량 리스트
		* Author : kct
		**/
		<![CDATA[
			SELECT TOP 100 PERCENT 
					 A.RTU_ID, 
					(SELECT sSystemName FROM SYSTEM_INFO WHERE iRtuNum = A.RTU_ID) AS sSystemName,
					 DATEPART(HH, A.Timestamp) AS HOUR, 
					 ROUND(A.Accumulate_Watt_Produce - ISNULL(
					 										ISNULL(
																	LAG(A.Accumulate_Watt_Produce) OVER (ORDER BY A.Timestamp), 
																 	(
																		SELECT Accumulate_Watt_Produce
																		FROM STX_SOFC_MEASURE
																		WHERE ID IN (
																						SELECT ID
																						FROM STX_SOFC_MEASURE AA
																						JOIN (
																								SELECT RTU_ID, MAX(TIMESTAMP) AS TIME
																								FROM STX_SOFC_MEASURE
																								WHERE RTU_ID = #{iRtuNum}
																								AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE() - 1) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE() - 1))
																								GROUP BY RTU_ID
																							) BB
																						ON AA.RTU_ID = BB.RTU_ID AND AA.TIMESTAMP = BB.TIME
																					)
																	)
																), A.Accumulate_Watt_Produce
															),2
														) AS Accumulate_Watt_Produce
			FROM STX_SOFC_MEASURE A
			JOIN (
					SELECT TOP 100 PERCENT RTU_ID, MAX(TIMESTAMP) AS TIME
					FROM STX_SOFC_MEASURE
					WHERE 1=1
					AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE()) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE()))
					AND RTU_ID = #{iRtuNum}
					GROUP BY RTU_ID, DATEPART(DD,TIMESTAMP), DATEPART(HH, TIMESTAMP)
				) B
			ON A.RTU_ID = B.RTU_ID
			AND A.TIMESTAMP = B.TIME
			ORDER BY A.Timestamp ASC
		]]>
	</select>
	
	<select id="audiInfo" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : audiInfo
		* Description : 수용가 정보 조회
		* Author : kct
		**/
		<![CDATA[
			
			SELECT sAudiNum, sAudiName, sAudiCall, sAudiDo, sAudiCity, sAudiArea, sAudiBiz, sAudiBuilding
			FROM AUDI_INFO
			WHERE iSiteNum = #{iSiteNum}
			
		]]>		
	</select>
	
	<insert id="insertAudiInfo" parameterType="com.stx.sofc.dashboard.vo.DashboardVO">
    	/**
		* Query ID : insertAudiInfo
		* Description : 수용가 정보 입력
		* Author : kct
		**/
    	<![CDATA[
	    	MERGE AUDI_INFO TARGET
			USING ( VALUES (#{iSiteNum}, #{sSiteName}, #{sAudiName}, #{sAudiCall}, #{sAudiDo}, #{sAudiCity}, #{sAudiArea}, #{sAudiBiz}, #{sAudiBuilding})) AS SOURCE(iSiteNum, sSiteName, sAudiName, sAudiCall, sAudiDo, sAudiCity, sAudiArea, sAudiBiz, sAudiBuilding)
			ON TARGET.iSiteNum = SOURCE.iSiteNum
			WHEN MATCHED THEN
				UPDATE SET sAudiName = SOURCE.sAudiName, sAudiCall = SOURCE.sAudiCall, sAudiDo = SOURCE.sAudiDo, sAudiCity = SOURCE.sAudiCity, sAudiArea = SOURCE.sAudiArea, sAudiBiz = SOURCE.sAudiBiz, sAudiBuilding = SOURCE.sAudiBuilding
			WHEN NOT MATCHED THEN
				INSERT (iSiteNum, sSiteName, sAudiName, sAudiCall, sAudiDo, sAudiCity, sAudiArea, sAudiBiz, sAudiBuilding) VALUES (SOURCE.iSiteNum, SOURCE.sSiteName, SOURCE.sAudiName, SOURCE.sAudiCall, SOURCE.sAudiDo, SOURCE.sAudiCity, SOURCE.sAudiArea, SOURCE.sAudiBiz, SOURCE.sAudiBuilding);
		]]>
    </insert>
    
    <delete id="deleteAudiInfo" parameterType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : deleteAudiInfo
		* Description : 수용가 정보 제거
		* Author : kct
		**/
		<![CDATA[
			DELETE
			FROM Audi_info
			WHERE iSiteNum IN (
									SELECT iSiteNum
									FROM Site_info
									WHERE 1=1
									]]>
									<if test=" iCityNum != null and iCityNum != '' ">
										<![CDATA[
											AND iCityNum = #{iCityNum}
										]]>
									</if>
									<if test=" iAreaNum != null and iAreaNum != '' ">
										<![CDATA[
											AND iAreaNum = #{iAreaNum}
										]]>
									</if>
									<if test=" iSiteNum != null and iSiteNum != '' ">
										<![CDATA[
											AND iSiteNum = #{iSiteNum}
										]]>
									</if>
									<![CDATA[
							)
		]]>
	</delete>
    
    <insert id="insertSystemInfo" parameterType="com.stx.sofc.dashboard.vo.DashboardVO">
    	/**
		* Query ID : insertSystemInfo
		* Description : 발전기 추가
		* Author : kct
		**/
    	<![CDATA[
	    	INSERT INTO SYSTEM_INFO(iCityNum, iAreaNum, iSiteNum, iRtuNum, iBdNum, sSystemName, fCapa, fCapa_Geo, fCapa_Solar, fLHV, fCO2) 
	    	VALUES(#{iCityNum}, #{iAreaNum}, #{iSiteNum}, #{iRtuNum}, #{iBdNum}, #{sSystemName}, #{fCapa}, #{fCapaGeo}, #{fCapaSolar}, #{fLhv}, #{fCO2})
		]]>
    </insert>
    
	<delete id="deleteSystemInfo" parameterType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : deleteSystemInfo
		* Description : 발전기 추가
		* Author : kct
		**/
		<![CDATA[
			DELETE 
			FROM System_Info
			WHERE 1=1
		]]>
		<if test=" iCityNum != null and iCityNum != '' ">
			<![CDATA[
				AND iCityNum = #{iCityNum}
			]]>
		</if>
		<if test=" iAreaNum != null and iAreaNum != '' ">
			<![CDATA[
				AND iAreaNum = #{iAreaNum}
			]]>
		</if>
		<if test=" iSiteNum != null and iSiteNum != '' ">
			<![CDATA[
				AND iSiteNum = #{iSiteNum}
			]]>
		</if>
		<if test=" iSysNum != null and iSysNum != '' ">
			<![CDATA[
				AND iSysNum = #{iSysNum}
			]]>
		</if>
		
	</delete>
	
	<select id="systemRtuIdList" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="com.stx.sofc.dashboard.vo.DashboardVO">
		/**
		* Query ID : systemRtuIdList
		* Description : 공장 번호 리스트 조회
		* Author : kct
		**/
		<![CDATA[
			SELECT A.sSystemName, A.iRtuNum
			FROM SYSTEM_INFO A
			WHERE 1=1
			]]>
			<if test=" iCityNum != null and iCityNum != '' ">
				<![CDATA[
					AND A.iCityNum = #{iCityNum}
				]]>
			</if>
			<if test=" iAreaNum != null and iAreaNum != '' ">
				<![CDATA[
					AND A.iAreaNum = #{iAreaNum}
				]]>
			</if>
			<if test=" iSiteNum != null and iSiteNum != '' ">
				<![CDATA[
					AND A.iSiteNum = #{iSiteNum}
				]]>
			</if>
	</select>
	
	<select id="tdAccumulateWattProduceAvg" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="String">
		/**
		* Query ID : tdAccumulateWattProduceAvg
		* Description : 당일 현재시각까지 평균발전량
		* Author : kct
		**/
		SELECT ISNULL(ROUND(AVG(tbl1.Accumulate_Watt_Produce), 2), 0) AS Accumulate_Watt_Produce
		FROM (
				SELECT TOP 100 PERCENT 
						ROUND(A.Accumulate_Watt_Produce - ISNULL(
																ISNULL(
																	LAG(A.Accumulate_Watt_Produce) OVER (ORDER BY A.Timestamp), 
																	(
																		SELECT Accumulate_Watt_Produce
																		FROM STX_SOFC_MEASURE
																		WHERE ID IN (
																						SELECT ID
																						FROM STX_SOFC_MEASURE AA
																						JOIN (
																								SELECT RTU_ID, MAX(TIMESTAMP) AS TIME
																								FROM STX_SOFC_MEASURE
																								WHERE RTU_ID = #{iRtuNum}
																								AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE() - 1) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE() - 1))
																								GROUP BY RTU_ID
																							) BB
																						ON AA.RTU_ID = BB.RTU_ID AND AA.TIMESTAMP = BB.TIME
																					) 
																	)
																), A.Accumulate_Watt_Produce
															),2 
							) AS Accumulate_Watt_Produce
				FROM STX_SOFC_MEASURE A
				JOIN (
						SELECT TOP 100 PERCENT RTU_ID, MAX(TIMESTAMP) AS TIME
						FROM STX_SOFC_MEASURE
						WHERE 1=1
						AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE()) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE()))
						AND RTU_ID = #{iRtuNum}
						GROUP BY RTU_ID, DATEPART(DD,TIMESTAMP), DATEPART(HH, TIMESTAMP)
					) B
				ON A.RTU_ID = B.RTU_ID
				AND A.TIMESTAMP = B.TIME
				ORDER BY A.Timestamp ASC
		) tbl1
	</select>
	
	<select id="tdFLAvg"  parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="String">
		/**
		* Query ID : tdFLAvg
		* Description : 당일 평균가스유량 
		* Author : kct
		**/
		SELECT ISNULL(ROUND(AVG(tbl1.FL1 + tbl1.FL2), 2), 0) AS FL_AVG
		FROM (
				SELECT TOP 100 PERCENT SUM(FL1) AS FL1, SUM(FL2) AS FL2
				FROM STX_SOFC_MEASURE
				WHERE 1=1
				AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE()) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE()))
				AND RTU_ID = #{iRtuNum}
				GROUP BY RTU_ID, DATEPART(DD,TIMESTAMP), DATEPART(HH, TIMESTAMP)
		) tbl1
	</select>
	
	<select id="adAccumulateWattProduceAvg" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="String">
		/**
		* Query ID : adAccumulateWattProduceAvg
		* Description : 전체 현재시각까지 평균발전량
		* Author : kct
		**/
		SELECT ISNULL(ROUND(AVG(tbl1.Accumulate_Watt_Produce), 2), 0) AS Accumulate_Watt_Produce
		FROM (
				SELECT TOP 100 PERCENT ROUND(A.Accumulate_Watt_Produce - ISNULL(LAG(A.Accumulate_Watt_Produce) OVER (ORDER BY A.Timestamp), A.Accumulate_Watt_Produce),2) AS Accumulate_Watt_Produce
				FROM STX_SOFC_MEASURE A
				JOIN (
							SELECT TOP 100 PERCENT RTU_ID, MAX(TIMESTAMP) AS TIME
							FROM STX_SOFC_MEASURE
							WHERE 1=1
							AND RTU_ID = #{iRtuNum}
							GROUP BY RTU_ID, DATEPART(DD,TIMESTAMP), DATEPART(HH, TIMESTAMP)
						) B
				ON A.RTU_ID = B.RTU_ID
				AND A.TIMESTAMP = B.TIME
				ORDER BY A.Timestamp ASC
		) tbl1
	</select>
	
	<select id="adFLAvg"  parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="String">
		/**
		* Query ID : adFLAvg
		* Description : 전체 평균가스유량 
		* Author : kct
		**/
		SELECT ISNULL(ROUND(AVG(tbl1.FL1 + tbl1.FL2), 2), 0) AS FL_AVG
		FROM (
				SELECT TOP 100 PERCENT SUM(FL1) AS FL1, SUM(FL2) AS FL2
				FROM STX_SOFC_MEASURE
				WHERE 1=1
				AND RTU_ID = #{iRtuNum}
				GROUP BY RTU_ID, DATEPART(DD,TIMESTAMP), DATEPART(HH, TIMESTAMP)
		) tbl1
	</select>
	
	
</mapper>