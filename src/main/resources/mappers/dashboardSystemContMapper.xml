<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stx.sofc.mappers.dashboard.systemCont">
	
	<select id="systemContMeasure" parameterType="com.stx.sofc.dashboard.vo.SystemContVO" resultType="com.stx.sofc.dashboard.vo.SystemContVO">
		/**
		* Query ID : systemContMeasure
		* Description : 시스템 제어 화면 데이터 조회
		* Author : kct
		**/
		<![CDATA[
			SELECT RTU_ID, 
					Timestamp,
					PUMP1,
					PUMP2,
					PUMP3,
					PUMP4,
					FL1,
					FL2,
					FL3,
					FL5,
					
					Status_SOL1,
					Status_SOL2,
					Status_SOL4,						
					Status_SOL5,
					Status_SOL6,						
					
					TC1,
					TC2,
					TC3,
					TC4,
					TC5,
					TC6,
					TC7,
					TC8,
					TC9,
					TC10,
					TC11,
			
					Status_SNH,
					Status_Three_Way_Valve,
					Status_Water_Level_Sensor,
					PT1,
					PT2,
					
					Status_Operation_Status,
					
					Error_Inverter_Error_Code,
					
					AC_Ampare,
					AC_Voltage,
					AC_Watt,
					
					DC_Voltage,
					DC_Ampare,
					DC_Watt,
					
					Rear_AC_Voltage,
					Rear_AC_Ampare,
					Rear_AC_Watt,
					Heat_Produce,
					Status_Op_ONOFF,
					(Accumulate_Heat_Produce / 1000) AS Accumulate_Heat_Produce,
					(Accumulate_Heat_Consume / 1000) AS Accumulate_Heat_Consume,
					(Pre_Day_Accumulate_Heat_Produce / 1000) AS Pre_Day_Accumulate_Heat_Produce,
					Inlet_Temp,
					Outlet_Temp,
					Power_Factor,
					Freq,
					Accumulate_Watt_Produce
			FROM STX_SOFC_MEASURE
			WHERE ID = (
							SELECT MAX(ID) AS ID
							FROM STX_SOFC_MEASURE A
							JOIN (
									SELECT RTU_ID, MAX(TIMESTAMP) AS TIME
							       	FROM STX_SOFC_MEASURE
							      	WHERE RTU_ID = #{rtuId}
									AND TIMESTAMP BETWEEN CONVERT(DATE, GETDATE()) AND DATEADD(DAY, 1, CONVERT(DATE, GETDATE()))
									GROUP BY RTU_ID
								) B
							ON A.RTU_ID = B.RTU_ID
							AND A.TIMESTAMP = B.TIME
			
			)
		]]>
	</select>

	<select id="selectIRemoteStatus" parameterType="com.stx.sofc.dashboard.vo.DashboardVO" resultType="int">
		/**
		* Query ID : systemContMeasure
		* Description : 시스템 제어 화면 데이터 조회
		* Author : kct
		**/
		<![CDATA[
		SELECT ISNULL(iRemoteStatus, 0) as iRemoteStatus
		FROM System_info
		WHERE iSysNum = #{iSysNum}
			AND iCityNum = #{iCityNum}
			AND iAreaNum = #{iAreaNum}
			AND iSiteNum = #{iSiteNum}
			AND iRtuNum = #{iRtuNum}
			AND iBdNum = #{iBdNum}
		]]>
	</select>
	
	<select id="systemMeasureExcelDownload" parameterType="com.stx.sofc.dashboard.vo.SystemContVO" resultType="com.stx.sofc.dashboard.vo.SystemContVO">
		<![CDATA[
			SELECT A.RTU_ID, 
					A.TIMESTAMP,
					A.PUMP1,
					A.PUMP2,
					A.PUMP3,
					A.PUMP4,
					A.FL1,
					A.FL2,
					A.FL3,
					A.FL5,
					
					A.Status_SOL1,
					A.Status_SOL2,
					A.Status_SOL4,						
					A.Status_SOL5,
					A.Status_SOL6,						
					
					A.TC1,
					A.TC2,
					A.TC3,
					A.TC4,
					A.TC5,
					A.TC6,
					A.TC7,
					A.TC8,
					A.TC9,
					A.TC10,
					A.TC11,
			
					CASE
						WHEN A.Status_SNH = 1 THEN 'ON'
						ELSE 'OFF'
					END AS Status_SNH,
					
					CASE
						WHEN A.Status_Three_Way_Valve = 1 THEN 'A(저탕조)'
						ELSE 'B(보일러)'
					END Status_Three_Way_Valve,
					
					CASE
						WHEN A.Status_Water_Level_Sensor = 0 THEN 'LOW'
						ELSE 'HIGH'
					END AS Status_Water_Level_Sensor,
					A.PT1,
					A.PT2,
					
					A.Status_Operation_Status,
					A.Error_Inverter_Error_Code,
					A.Error_Error_Code,
					
					A.DC_Ampare,
					A.DC_Voltage,
					A.DC_Watt,
					
					A.Rear_AC_Voltage,
					A.Rear_AC_Ampare,
					A.Rear_AC_Watt,
					A.Heat_Produce,
					A.Status_Op_ONOFF,
					(A.Accumulate_Heat_Produce / 1000) AS Accumulate_Heat_Produce,
					(A.Accumulate_Heat_Consume / 1000) AS Accumulate_Heat_Consume,
					(A.Pre_Day_Accumulate_Heat_Produce / 1000) AS Pre_Day_Accumulate_Heat_Produce,
					A.Inlet_Temp,
					A.Outlet_Temp,
					A.Power_Factor,
					A.Freq,
					A.Accumulate_Watt_Produce,
					ISNULL((
						SELECT Accumulate_Watt_Produce
						FROM STX_SOFC_MEASURE
						WHERE ID IN (
									SELECT MAX(ID)
									FROM STX_SOFC_MEASURE A
									JOIN (
											SELECT RTU_ID, MAX(TIMESTAMP) AS TIME
											FROM STX_SOFC_MEASURE
											WHERE RTU_ID IN (
																SELECT iRtuNum
																FROM SYSTEM_INFO
																WHERE 1=1
															)
											--AND TIMESTAMP BETWEEN CONVERT(DATE, A.TIMESTAMP - 1) AND DATEADD(DAY, 1, CONVERT(DATE, A.TIMESTAMP - 1))
											GROUP BY RTU_ID
										) B
									ON A.RTU_ID = B.RTU_ID
									AND A.TIMESTAMP = B.TIME
						)
					),0) AS pre_Accumulate_Watt_Produce
			FROM STX_SOFC_MEASURE A
			JOIN (
					SELECT TOP 100 PERCENT MAX(ID) AS ID, RTU_ID, MAX(TIMESTAMP) AS TIME
					FROM STX_SOFC_MEASURE
					WHERE 1=1
					AND TIMESTAMP BETWEEN #{searchRequstDeBgn} AND DATEADD(dd, 1, #{searchRequstDeEnd})
					AND RTU_ID = #{rtuId}
					GROUP BY RTU_ID, datepart(YEAR,timestamp),datepart(MONTH,timestamp), datepart(DAY,timestamp), datepart(HOUR, TIMESTAMP), datepart(MINUTE, TIMESTAMP) / 3
				) B
			ON A.ID = B.ID
			ORDER BY TIMESTAMP
		]]>
	</select>
	
	
</mapper>